#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace NhanVien.lq
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="QuanLyATC_HueTam")]
	public partial class DataClasses1DataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertCHUCVU(CHUCVU instance);
    partial void UpdateCHUCVU(CHUCVU instance);
    partial void DeleteCHUCVU(CHUCVU instance);
    partial void InsertORDER(ORDER instance);
    partial void UpdateORDER(ORDER instance);
    partial void DeleteORDER(ORDER instance);
    partial void InsertCUNGCAP(CUNGCAP instance);
    partial void UpdateCUNGCAP(CUNGCAP instance);
    partial void DeleteCUNGCAP(CUNGCAP instance);
    partial void InsertKHACHHANG(KHACHHANG instance);
    partial void UpdateKHACHHANG(KHACHHANG instance);
    partial void DeleteKHACHHANG(KHACHHANG instance);
    partial void InsertLOAI_MON(LOAI_MON instance);
    partial void UpdateLOAI_MON(LOAI_MON instance);
    partial void DeleteLOAI_MON(LOAI_MON instance);
    partial void InsertLOAI_NVL(LOAI_NVL instance);
    partial void UpdateLOAI_NVL(LOAI_NVL instance);
    partial void DeleteLOAI_NVL(LOAI_NVL instance);
    partial void InsertMON(MON instance);
    partial void UpdateMON(MON instance);
    partial void DeleteMON(MON instance);
    partial void InsertMON_NVL(MON_NVL instance);
    partial void UpdateMON_NVL(MON_NVL instance);
    partial void DeleteMON_NVL(MON_NVL instance);
    partial void InsertMON_ORDER(MON_ORDER instance);
    partial void UpdateMON_ORDER(MON_ORDER instance);
    partial void DeleteMON_ORDER(MON_ORDER instance);
    partial void InsertNGUYENVATLIEU(NGUYENVATLIEU instance);
    partial void UpdateNGUYENVATLIEU(NGUYENVATLIEU instance);
    partial void DeleteNGUYENVATLIEU(NGUYENVATLIEU instance);
    partial void InsertNHACUNGCAP(NHACUNGCAP instance);
    partial void UpdateNHACUNGCAP(NHACUNGCAP instance);
    partial void DeleteNHACUNGCAP(NHACUNGCAP instance);
    partial void InsertNHANVIEN(NHANVIEN instance);
    partial void UpdateNHANVIEN(NHANVIEN instance);
    partial void DeleteNHANVIEN(NHANVIEN instance);
    #endregion
		
		public DataClasses1DataContext() : 
				base(global::NhanVien.Properties.Settings.Default.QuanLyATC_HueTamConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<CHUCVU> CHUCVUs
		{
			get
			{
				return this.GetTable<CHUCVU>();
			}
		}
		
		public System.Data.Linq.Table<ORDER> ORDERs
		{
			get
			{
				return this.GetTable<ORDER>();
			}
		}
		
		public System.Data.Linq.Table<CUNGCAP> CUNGCAPs
		{
			get
			{
				return this.GetTable<CUNGCAP>();
			}
		}
		
		public System.Data.Linq.Table<KHACHHANG> KHACHHANGs
		{
			get
			{
				return this.GetTable<KHACHHANG>();
			}
		}
		
		public System.Data.Linq.Table<LOAI_MON> LOAI_MONs
		{
			get
			{
				return this.GetTable<LOAI_MON>();
			}
		}
		
		public System.Data.Linq.Table<LOAI_NVL> LOAI_NVLs
		{
			get
			{
				return this.GetTable<LOAI_NVL>();
			}
		}
		
		public System.Data.Linq.Table<MON> MONs
		{
			get
			{
				return this.GetTable<MON>();
			}
		}
		
		public System.Data.Linq.Table<MON_NVL> MON_NVLs
		{
			get
			{
				return this.GetTable<MON_NVL>();
			}
		}
		
		public System.Data.Linq.Table<MON_ORDER> MON_ORDERs
		{
			get
			{
				return this.GetTable<MON_ORDER>();
			}
		}
		
		public System.Data.Linq.Table<NGUYENVATLIEU> NGUYENVATLIEUs
		{
			get
			{
				return this.GetTable<NGUYENVATLIEU>();
			}
		}
		
		public System.Data.Linq.Table<NHACUNGCAP> NHACUNGCAPs
		{
			get
			{
				return this.GetTable<NHACUNGCAP>();
			}
		}
		
		public System.Data.Linq.Table<NHANVIEN> NHANVIENs
		{
			get
			{
				return this.GetTable<NHANVIEN>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CHUCVU")]
	public partial class CHUCVU : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ID_ChucVu;
		
		private string _Ten_ChucVu;
		
		private System.Nullable<int> _HeSoLuong;
		
		private EntitySet<NHANVIEN> _NHANVIENs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnID_ChucVuChanging(string value);
    partial void OnID_ChucVuChanged();
    partial void OnTen_ChucVuChanging(string value);
    partial void OnTen_ChucVuChanged();
    partial void OnHeSoLuongChanging(System.Nullable<int> value);
    partial void OnHeSoLuongChanged();
    #endregion
		
		public CHUCVU()
		{
			this._NHANVIENs = new EntitySet<NHANVIEN>(new Action<NHANVIEN>(this.attach_NHANVIENs), new Action<NHANVIEN>(this.detach_NHANVIENs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_ChucVu", DbType="NVarChar(5) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID_ChucVu
		{
			get
			{
				return this._ID_ChucVu;
			}
			set
			{
				if ((this._ID_ChucVu != value))
				{
					this.OnID_ChucVuChanging(value);
					this.SendPropertyChanging();
					this._ID_ChucVu = value;
					this.SendPropertyChanged("ID_ChucVu");
					this.OnID_ChucVuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ten_ChucVu", DbType="NVarChar(20)")]
		public string Ten_ChucVu
		{
			get
			{
				return this._Ten_ChucVu;
			}
			set
			{
				if ((this._Ten_ChucVu != value))
				{
					this.OnTen_ChucVuChanging(value);
					this.SendPropertyChanging();
					this._Ten_ChucVu = value;
					this.SendPropertyChanged("Ten_ChucVu");
					this.OnTen_ChucVuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HeSoLuong", DbType="Int")]
		public System.Nullable<int> HeSoLuong
		{
			get
			{
				return this._HeSoLuong;
			}
			set
			{
				if ((this._HeSoLuong != value))
				{
					this.OnHeSoLuongChanging(value);
					this.SendPropertyChanging();
					this._HeSoLuong = value;
					this.SendPropertyChanged("HeSoLuong");
					this.OnHeSoLuongChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CHUCVU_NHANVIEN", Storage="_NHANVIENs", ThisKey="ID_ChucVu", OtherKey="ID_ChucVu")]
		public EntitySet<NHANVIEN> NHANVIENs
		{
			get
			{
				return this._NHANVIENs;
			}
			set
			{
				this._NHANVIENs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_NHANVIENs(NHANVIEN entity)
		{
			this.SendPropertyChanging();
			entity.CHUCVU = this;
		}
		
		private void detach_NHANVIENs(NHANVIEN entity)
		{
			this.SendPropertyChanging();
			entity.CHUCVU = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ORDERS")]
	public partial class ORDER : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID_Orders;
		
		private int _ID_KH;
		
		private int _ID_NV;
		
		private System.DateTime _NgayGioDat;
		
		private string _BanSo;
		
		private EntitySet<MON_ORDER> _MON_ORDERs;
		
		private EntityRef<KHACHHANG> _KHACHHANG;
		
		private EntityRef<NHANVIEN> _NHANVIEN;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnID_OrdersChanging(int value);
    partial void OnID_OrdersChanged();
    partial void OnID_KHChanging(int value);
    partial void OnID_KHChanged();
    partial void OnID_NVChanging(int value);
    partial void OnID_NVChanged();
    partial void OnNgayGioDatChanging(System.DateTime value);
    partial void OnNgayGioDatChanged();
    partial void OnBanSoChanging(string value);
    partial void OnBanSoChanged();
    #endregion
		
		public ORDER()
		{
			this._MON_ORDERs = new EntitySet<MON_ORDER>(new Action<MON_ORDER>(this.attach_MON_ORDERs), new Action<MON_ORDER>(this.detach_MON_ORDERs));
			this._KHACHHANG = default(EntityRef<KHACHHANG>);
			this._NHANVIEN = default(EntityRef<NHANVIEN>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_Orders", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID_Orders
		{
			get
			{
				return this._ID_Orders;
			}
			set
			{
				if ((this._ID_Orders != value))
				{
					this.OnID_OrdersChanging(value);
					this.SendPropertyChanging();
					this._ID_Orders = value;
					this.SendPropertyChanged("ID_Orders");
					this.OnID_OrdersChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_KH", DbType="Int NOT NULL")]
		public int ID_KH
		{
			get
			{
				return this._ID_KH;
			}
			set
			{
				if ((this._ID_KH != value))
				{
					if (this._KHACHHANG.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_KHChanging(value);
					this.SendPropertyChanging();
					this._ID_KH = value;
					this.SendPropertyChanged("ID_KH");
					this.OnID_KHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_NV", DbType="Int NOT NULL")]
		public int ID_NV
		{
			get
			{
				return this._ID_NV;
			}
			set
			{
				if ((this._ID_NV != value))
				{
					if (this._NHANVIEN.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_NVChanging(value);
					this.SendPropertyChanging();
					this._ID_NV = value;
					this.SendPropertyChanged("ID_NV");
					this.OnID_NVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgayGioDat", DbType="DateTime NOT NULL")]
		public System.DateTime NgayGioDat
		{
			get
			{
				return this._NgayGioDat;
			}
			set
			{
				if ((this._NgayGioDat != value))
				{
					this.OnNgayGioDatChanging(value);
					this.SendPropertyChanging();
					this._NgayGioDat = value;
					this.SendPropertyChanged("NgayGioDat");
					this.OnNgayGioDatChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BanSo", DbType="NVarChar(3)")]
		public string BanSo
		{
			get
			{
				return this._BanSo;
			}
			set
			{
				if ((this._BanSo != value))
				{
					this.OnBanSoChanging(value);
					this.SendPropertyChanging();
					this._BanSo = value;
					this.SendPropertyChanged("BanSo");
					this.OnBanSoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ORDER_MON_ORDER", Storage="_MON_ORDERs", ThisKey="ID_Orders", OtherKey="ID_Orders")]
		public EntitySet<MON_ORDER> MON_ORDERs
		{
			get
			{
				return this._MON_ORDERs;
			}
			set
			{
				this._MON_ORDERs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KHACHHANG_ORDER", Storage="_KHACHHANG", ThisKey="ID_KH", OtherKey="ID_KH", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public KHACHHANG KHACHHANG
		{
			get
			{
				return this._KHACHHANG.Entity;
			}
			set
			{
				KHACHHANG previousValue = this._KHACHHANG.Entity;
				if (((previousValue != value) 
							|| (this._KHACHHANG.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._KHACHHANG.Entity = null;
						previousValue.ORDERs.Remove(this);
					}
					this._KHACHHANG.Entity = value;
					if ((value != null))
					{
						value.ORDERs.Add(this);
						this._ID_KH = value.ID_KH;
					}
					else
					{
						this._ID_KH = default(int);
					}
					this.SendPropertyChanged("KHACHHANG");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NHANVIEN_ORDER", Storage="_NHANVIEN", ThisKey="ID_NV", OtherKey="ID_NV", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public NHANVIEN NHANVIEN
		{
			get
			{
				return this._NHANVIEN.Entity;
			}
			set
			{
				NHANVIEN previousValue = this._NHANVIEN.Entity;
				if (((previousValue != value) 
							|| (this._NHANVIEN.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NHANVIEN.Entity = null;
						previousValue.ORDERs.Remove(this);
					}
					this._NHANVIEN.Entity = value;
					if ((value != null))
					{
						value.ORDERs.Add(this);
						this._ID_NV = value.ID_NV;
					}
					else
					{
						this._ID_NV = default(int);
					}
					this.SendPropertyChanged("NHANVIEN");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_MON_ORDERs(MON_ORDER entity)
		{
			this.SendPropertyChanging();
			entity.ORDER = this;
		}
		
		private void detach_MON_ORDERs(MON_ORDER entity)
		{
			this.SendPropertyChanging();
			entity.ORDER = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CUNGCAP")]
	public partial class CUNGCAP : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ID_NVL;
		
		private string _ID_NCC;
		
		private System.Nullable<decimal> _DonGia;
		
		private System.Nullable<int> _SoLuong;
		
		private EntityRef<NGUYENVATLIEU> _NGUYENVATLIEU;
		
		private EntityRef<NHACUNGCAP> _NHACUNGCAP;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnID_NVLChanging(string value);
    partial void OnID_NVLChanged();
    partial void OnID_NCCChanging(string value);
    partial void OnID_NCCChanged();
    partial void OnDonGiaChanging(System.Nullable<decimal> value);
    partial void OnDonGiaChanged();
    partial void OnSoLuongChanging(System.Nullable<int> value);
    partial void OnSoLuongChanged();
    #endregion
		
		public CUNGCAP()
		{
			this._NGUYENVATLIEU = default(EntityRef<NGUYENVATLIEU>);
			this._NHACUNGCAP = default(EntityRef<NHACUNGCAP>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_NVL", DbType="NVarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID_NVL
		{
			get
			{
				return this._ID_NVL;
			}
			set
			{
				if ((this._ID_NVL != value))
				{
					if (this._NGUYENVATLIEU.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_NVLChanging(value);
					this.SendPropertyChanging();
					this._ID_NVL = value;
					this.SendPropertyChanged("ID_NVL");
					this.OnID_NVLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_NCC", DbType="NVarChar(5) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID_NCC
		{
			get
			{
				return this._ID_NCC;
			}
			set
			{
				if ((this._ID_NCC != value))
				{
					if (this._NHACUNGCAP.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_NCCChanging(value);
					this.SendPropertyChanging();
					this._ID_NCC = value;
					this.SendPropertyChanged("ID_NCC");
					this.OnID_NCCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DonGia", DbType="Money")]
		public System.Nullable<decimal> DonGia
		{
			get
			{
				return this._DonGia;
			}
			set
			{
				if ((this._DonGia != value))
				{
					this.OnDonGiaChanging(value);
					this.SendPropertyChanging();
					this._DonGia = value;
					this.SendPropertyChanged("DonGia");
					this.OnDonGiaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SoLuong", DbType="Int")]
		public System.Nullable<int> SoLuong
		{
			get
			{
				return this._SoLuong;
			}
			set
			{
				if ((this._SoLuong != value))
				{
					this.OnSoLuongChanging(value);
					this.SendPropertyChanging();
					this._SoLuong = value;
					this.SendPropertyChanged("SoLuong");
					this.OnSoLuongChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NGUYENVATLIEU_CUNGCAP", Storage="_NGUYENVATLIEU", ThisKey="ID_NVL", OtherKey="ID_NVL", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public NGUYENVATLIEU NGUYENVATLIEU
		{
			get
			{
				return this._NGUYENVATLIEU.Entity;
			}
			set
			{
				NGUYENVATLIEU previousValue = this._NGUYENVATLIEU.Entity;
				if (((previousValue != value) 
							|| (this._NGUYENVATLIEU.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NGUYENVATLIEU.Entity = null;
						previousValue.CUNGCAPs.Remove(this);
					}
					this._NGUYENVATLIEU.Entity = value;
					if ((value != null))
					{
						value.CUNGCAPs.Add(this);
						this._ID_NVL = value.ID_NVL;
					}
					else
					{
						this._ID_NVL = default(string);
					}
					this.SendPropertyChanged("NGUYENVATLIEU");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NHACUNGCAP_CUNGCAP", Storage="_NHACUNGCAP", ThisKey="ID_NCC", OtherKey="ID_NCC", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public NHACUNGCAP NHACUNGCAP
		{
			get
			{
				return this._NHACUNGCAP.Entity;
			}
			set
			{
				NHACUNGCAP previousValue = this._NHACUNGCAP.Entity;
				if (((previousValue != value) 
							|| (this._NHACUNGCAP.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NHACUNGCAP.Entity = null;
						previousValue.CUNGCAPs.Remove(this);
					}
					this._NHACUNGCAP.Entity = value;
					if ((value != null))
					{
						value.CUNGCAPs.Add(this);
						this._ID_NCC = value.ID_NCC;
					}
					else
					{
						this._ID_NCC = default(string);
					}
					this.SendPropertyChanged("NHACUNGCAP");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.KHACHHANG")]
	public partial class KHACHHANG : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID_KH;
		
		private string _Ho_KH;
		
		private string _Ten_KH;
		
		private System.Nullable<bool> _GioiTinh_KH;
		
		private string _SDT_KH;
		
		private EntitySet<ORDER> _ORDERs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnID_KHChanging(int value);
    partial void OnID_KHChanged();
    partial void OnHo_KHChanging(string value);
    partial void OnHo_KHChanged();
    partial void OnTen_KHChanging(string value);
    partial void OnTen_KHChanged();
    partial void OnGioiTinh_KHChanging(System.Nullable<bool> value);
    partial void OnGioiTinh_KHChanged();
    partial void OnSDT_KHChanging(string value);
    partial void OnSDT_KHChanged();
    #endregion
		
		public KHACHHANG()
		{
			this._ORDERs = new EntitySet<ORDER>(new Action<ORDER>(this.attach_ORDERs), new Action<ORDER>(this.detach_ORDERs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_KH", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID_KH
		{
			get
			{
				return this._ID_KH;
			}
			set
			{
				if ((this._ID_KH != value))
				{
					this.OnID_KHChanging(value);
					this.SendPropertyChanging();
					this._ID_KH = value;
					this.SendPropertyChanged("ID_KH");
					this.OnID_KHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ho_KH", DbType="NVarChar(50)")]
		public string Ho_KH
		{
			get
			{
				return this._Ho_KH;
			}
			set
			{
				if ((this._Ho_KH != value))
				{
					this.OnHo_KHChanging(value);
					this.SendPropertyChanging();
					this._Ho_KH = value;
					this.SendPropertyChanged("Ho_KH");
					this.OnHo_KHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ten_KH", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Ten_KH
		{
			get
			{
				return this._Ten_KH;
			}
			set
			{
				if ((this._Ten_KH != value))
				{
					this.OnTen_KHChanging(value);
					this.SendPropertyChanging();
					this._Ten_KH = value;
					this.SendPropertyChanged("Ten_KH");
					this.OnTen_KHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GioiTinh_KH", DbType="Bit")]
		public System.Nullable<bool> GioiTinh_KH
		{
			get
			{
				return this._GioiTinh_KH;
			}
			set
			{
				if ((this._GioiTinh_KH != value))
				{
					this.OnGioiTinh_KHChanging(value);
					this.SendPropertyChanging();
					this._GioiTinh_KH = value;
					this.SendPropertyChanged("GioiTinh_KH");
					this.OnGioiTinh_KHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SDT_KH", DbType="NVarChar(15)")]
		public string SDT_KH
		{
			get
			{
				return this._SDT_KH;
			}
			set
			{
				if ((this._SDT_KH != value))
				{
					this.OnSDT_KHChanging(value);
					this.SendPropertyChanging();
					this._SDT_KH = value;
					this.SendPropertyChanged("SDT_KH");
					this.OnSDT_KHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KHACHHANG_ORDER", Storage="_ORDERs", ThisKey="ID_KH", OtherKey="ID_KH")]
		public EntitySet<ORDER> ORDERs
		{
			get
			{
				return this._ORDERs;
			}
			set
			{
				this._ORDERs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ORDERs(ORDER entity)
		{
			this.SendPropertyChanging();
			entity.KHACHHANG = this;
		}
		
		private void detach_ORDERs(ORDER entity)
		{
			this.SendPropertyChanging();
			entity.KHACHHANG = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LOAI_MON")]
	public partial class LOAI_MON : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ID_LoaiMon;
		
		private string _Ten_LoaiMon;
		
		private string _MoTa;
		
		private EntitySet<MON> _MONs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnID_LoaiMonChanging(string value);
    partial void OnID_LoaiMonChanged();
    partial void OnTen_LoaiMonChanging(string value);
    partial void OnTen_LoaiMonChanged();
    partial void OnMoTaChanging(string value);
    partial void OnMoTaChanged();
    #endregion
		
		public LOAI_MON()
		{
			this._MONs = new EntitySet<MON>(new Action<MON>(this.attach_MONs), new Action<MON>(this.detach_MONs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_LoaiMon", DbType="NVarChar(5) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID_LoaiMon
		{
			get
			{
				return this._ID_LoaiMon;
			}
			set
			{
				if ((this._ID_LoaiMon != value))
				{
					this.OnID_LoaiMonChanging(value);
					this.SendPropertyChanging();
					this._ID_LoaiMon = value;
					this.SendPropertyChanged("ID_LoaiMon");
					this.OnID_LoaiMonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ten_LoaiMon", DbType="NChar(25) NOT NULL", CanBeNull=false)]
		public string Ten_LoaiMon
		{
			get
			{
				return this._Ten_LoaiMon;
			}
			set
			{
				if ((this._Ten_LoaiMon != value))
				{
					this.OnTen_LoaiMonChanging(value);
					this.SendPropertyChanging();
					this._Ten_LoaiMon = value;
					this.SendPropertyChanged("Ten_LoaiMon");
					this.OnTen_LoaiMonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MoTa", DbType="NChar(100)")]
		public string MoTa
		{
			get
			{
				return this._MoTa;
			}
			set
			{
				if ((this._MoTa != value))
				{
					this.OnMoTaChanging(value);
					this.SendPropertyChanging();
					this._MoTa = value;
					this.SendPropertyChanged("MoTa");
					this.OnMoTaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LOAI_MON_MON", Storage="_MONs", ThisKey="ID_LoaiMon", OtherKey="ID_LoaiMon")]
		public EntitySet<MON> MONs
		{
			get
			{
				return this._MONs;
			}
			set
			{
				this._MONs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_MONs(MON entity)
		{
			this.SendPropertyChanging();
			entity.LOAI_MON = this;
		}
		
		private void detach_MONs(MON entity)
		{
			this.SendPropertyChanging();
			entity.LOAI_MON = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LOAI_NVL")]
	public partial class LOAI_NVL : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ID_LoaiNVL;
		
		private string _Ten_LoaiNVL;
		
		private string _MoTa;
		
		private EntitySet<NGUYENVATLIEU> _NGUYENVATLIEUs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnID_LoaiNVLChanging(string value);
    partial void OnID_LoaiNVLChanged();
    partial void OnTen_LoaiNVLChanging(string value);
    partial void OnTen_LoaiNVLChanged();
    partial void OnMoTaChanging(string value);
    partial void OnMoTaChanged();
    #endregion
		
		public LOAI_NVL()
		{
			this._NGUYENVATLIEUs = new EntitySet<NGUYENVATLIEU>(new Action<NGUYENVATLIEU>(this.attach_NGUYENVATLIEUs), new Action<NGUYENVATLIEU>(this.detach_NGUYENVATLIEUs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_LoaiNVL", DbType="NVarChar(5) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID_LoaiNVL
		{
			get
			{
				return this._ID_LoaiNVL;
			}
			set
			{
				if ((this._ID_LoaiNVL != value))
				{
					this.OnID_LoaiNVLChanging(value);
					this.SendPropertyChanging();
					this._ID_LoaiNVL = value;
					this.SendPropertyChanged("ID_LoaiNVL");
					this.OnID_LoaiNVLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ten_LoaiNVL", DbType="NVarChar(50)")]
		public string Ten_LoaiNVL
		{
			get
			{
				return this._Ten_LoaiNVL;
			}
			set
			{
				if ((this._Ten_LoaiNVL != value))
				{
					this.OnTen_LoaiNVLChanging(value);
					this.SendPropertyChanging();
					this._Ten_LoaiNVL = value;
					this.SendPropertyChanged("Ten_LoaiNVL");
					this.OnTen_LoaiNVLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MoTa", DbType="NVarChar(100)")]
		public string MoTa
		{
			get
			{
				return this._MoTa;
			}
			set
			{
				if ((this._MoTa != value))
				{
					this.OnMoTaChanging(value);
					this.SendPropertyChanging();
					this._MoTa = value;
					this.SendPropertyChanged("MoTa");
					this.OnMoTaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LOAI_NVL_NGUYENVATLIEU", Storage="_NGUYENVATLIEUs", ThisKey="ID_LoaiNVL", OtherKey="ID_LoaiNVL")]
		public EntitySet<NGUYENVATLIEU> NGUYENVATLIEUs
		{
			get
			{
				return this._NGUYENVATLIEUs;
			}
			set
			{
				this._NGUYENVATLIEUs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_NGUYENVATLIEUs(NGUYENVATLIEU entity)
		{
			this.SendPropertyChanging();
			entity.LOAI_NVL = this;
		}
		
		private void detach_NGUYENVATLIEUs(NGUYENVATLIEU entity)
		{
			this.SendPropertyChanging();
			entity.LOAI_NVL = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MON")]
	public partial class MON : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ID_Mon;
		
		private string _Ten_Mon;
		
		private string _QuyCach;
		
		private string _NuocCham;
		
		private string _MonKemTheo;
		
		private System.Nullable<int> _DonGia;
		
		private string _ChuThich;
		
		private string _ID_LoaiMon;
		
		private EntitySet<MON_NVL> _MON_NVLs;
		
		private EntitySet<MON_ORDER> _MON_ORDERs;
		
		private EntityRef<LOAI_MON> _LOAI_MON;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnID_MonChanging(string value);
    partial void OnID_MonChanged();
    partial void OnTen_MonChanging(string value);
    partial void OnTen_MonChanged();
    partial void OnQuyCachChanging(string value);
    partial void OnQuyCachChanged();
    partial void OnNuocChamChanging(string value);
    partial void OnNuocChamChanged();
    partial void OnMonKemTheoChanging(string value);
    partial void OnMonKemTheoChanged();
    partial void OnDonGiaChanging(System.Nullable<int> value);
    partial void OnDonGiaChanged();
    partial void OnChuThichChanging(string value);
    partial void OnChuThichChanged();
    partial void OnID_LoaiMonChanging(string value);
    partial void OnID_LoaiMonChanged();
    #endregion
		
		public MON()
		{
			this._MON_NVLs = new EntitySet<MON_NVL>(new Action<MON_NVL>(this.attach_MON_NVLs), new Action<MON_NVL>(this.detach_MON_NVLs));
			this._MON_ORDERs = new EntitySet<MON_ORDER>(new Action<MON_ORDER>(this.attach_MON_ORDERs), new Action<MON_ORDER>(this.detach_MON_ORDERs));
			this._LOAI_MON = default(EntityRef<LOAI_MON>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_Mon", DbType="NVarChar(8) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID_Mon
		{
			get
			{
				return this._ID_Mon;
			}
			set
			{
				if ((this._ID_Mon != value))
				{
					this.OnID_MonChanging(value);
					this.SendPropertyChanging();
					this._ID_Mon = value;
					this.SendPropertyChanged("ID_Mon");
					this.OnID_MonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ten_Mon", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Ten_Mon
		{
			get
			{
				return this._Ten_Mon;
			}
			set
			{
				if ((this._Ten_Mon != value))
				{
					this.OnTen_MonChanging(value);
					this.SendPropertyChanging();
					this._Ten_Mon = value;
					this.SendPropertyChanged("Ten_Mon");
					this.OnTen_MonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QuyCach", DbType="NVarChar(50)")]
		public string QuyCach
		{
			get
			{
				return this._QuyCach;
			}
			set
			{
				if ((this._QuyCach != value))
				{
					this.OnQuyCachChanging(value);
					this.SendPropertyChanging();
					this._QuyCach = value;
					this.SendPropertyChanged("QuyCach");
					this.OnQuyCachChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NuocCham", DbType="NVarChar(50)")]
		public string NuocCham
		{
			get
			{
				return this._NuocCham;
			}
			set
			{
				if ((this._NuocCham != value))
				{
					this.OnNuocChamChanging(value);
					this.SendPropertyChanging();
					this._NuocCham = value;
					this.SendPropertyChanged("NuocCham");
					this.OnNuocChamChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MonKemTheo", DbType="NVarChar(50)")]
		public string MonKemTheo
		{
			get
			{
				return this._MonKemTheo;
			}
			set
			{
				if ((this._MonKemTheo != value))
				{
					this.OnMonKemTheoChanging(value);
					this.SendPropertyChanging();
					this._MonKemTheo = value;
					this.SendPropertyChanged("MonKemTheo");
					this.OnMonKemTheoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DonGia", DbType="Int")]
		public System.Nullable<int> DonGia
		{
			get
			{
				return this._DonGia;
			}
			set
			{
				if ((this._DonGia != value))
				{
					this.OnDonGiaChanging(value);
					this.SendPropertyChanging();
					this._DonGia = value;
					this.SendPropertyChanged("DonGia");
					this.OnDonGiaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChuThich", DbType="NVarChar(100)")]
		public string ChuThich
		{
			get
			{
				return this._ChuThich;
			}
			set
			{
				if ((this._ChuThich != value))
				{
					this.OnChuThichChanging(value);
					this.SendPropertyChanging();
					this._ChuThich = value;
					this.SendPropertyChanged("ChuThich");
					this.OnChuThichChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_LoaiMon", DbType="NVarChar(5) NOT NULL", CanBeNull=false)]
		public string ID_LoaiMon
		{
			get
			{
				return this._ID_LoaiMon;
			}
			set
			{
				if ((this._ID_LoaiMon != value))
				{
					if (this._LOAI_MON.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_LoaiMonChanging(value);
					this.SendPropertyChanging();
					this._ID_LoaiMon = value;
					this.SendPropertyChanged("ID_LoaiMon");
					this.OnID_LoaiMonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MON_MON_NVL", Storage="_MON_NVLs", ThisKey="ID_Mon", OtherKey="ID_Mon")]
		public EntitySet<MON_NVL> MON_NVLs
		{
			get
			{
				return this._MON_NVLs;
			}
			set
			{
				this._MON_NVLs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MON_MON_ORDER", Storage="_MON_ORDERs", ThisKey="ID_Mon", OtherKey="ID_Mon")]
		public EntitySet<MON_ORDER> MON_ORDERs
		{
			get
			{
				return this._MON_ORDERs;
			}
			set
			{
				this._MON_ORDERs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LOAI_MON_MON", Storage="_LOAI_MON", ThisKey="ID_LoaiMon", OtherKey="ID_LoaiMon", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public LOAI_MON LOAI_MON
		{
			get
			{
				return this._LOAI_MON.Entity;
			}
			set
			{
				LOAI_MON previousValue = this._LOAI_MON.Entity;
				if (((previousValue != value) 
							|| (this._LOAI_MON.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._LOAI_MON.Entity = null;
						previousValue.MONs.Remove(this);
					}
					this._LOAI_MON.Entity = value;
					if ((value != null))
					{
						value.MONs.Add(this);
						this._ID_LoaiMon = value.ID_LoaiMon;
					}
					else
					{
						this._ID_LoaiMon = default(string);
					}
					this.SendPropertyChanged("LOAI_MON");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_MON_NVLs(MON_NVL entity)
		{
			this.SendPropertyChanging();
			entity.MON = this;
		}
		
		private void detach_MON_NVLs(MON_NVL entity)
		{
			this.SendPropertyChanging();
			entity.MON = null;
		}
		
		private void attach_MON_ORDERs(MON_ORDER entity)
		{
			this.SendPropertyChanging();
			entity.MON = this;
		}
		
		private void detach_MON_ORDERs(MON_ORDER entity)
		{
			this.SendPropertyChanging();
			entity.MON = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MON_NVL")]
	public partial class MON_NVL : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ID_Mon;
		
		private string _ID_NVL;
		
		private string _CheBien;
		
		private EntityRef<MON> _MON;
		
		private EntityRef<NGUYENVATLIEU> _NGUYENVATLIEU;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnID_MonChanging(string value);
    partial void OnID_MonChanged();
    partial void OnID_NVLChanging(string value);
    partial void OnID_NVLChanged();
    partial void OnCheBienChanging(string value);
    partial void OnCheBienChanged();
    #endregion
		
		public MON_NVL()
		{
			this._MON = default(EntityRef<MON>);
			this._NGUYENVATLIEU = default(EntityRef<NGUYENVATLIEU>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_Mon", DbType="NVarChar(8) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID_Mon
		{
			get
			{
				return this._ID_Mon;
			}
			set
			{
				if ((this._ID_Mon != value))
				{
					if (this._MON.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_MonChanging(value);
					this.SendPropertyChanging();
					this._ID_Mon = value;
					this.SendPropertyChanged("ID_Mon");
					this.OnID_MonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_NVL", DbType="NVarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID_NVL
		{
			get
			{
				return this._ID_NVL;
			}
			set
			{
				if ((this._ID_NVL != value))
				{
					if (this._NGUYENVATLIEU.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_NVLChanging(value);
					this.SendPropertyChanging();
					this._ID_NVL = value;
					this.SendPropertyChanged("ID_NVL");
					this.OnID_NVLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CheBien", DbType="NVarChar(100)")]
		public string CheBien
		{
			get
			{
				return this._CheBien;
			}
			set
			{
				if ((this._CheBien != value))
				{
					this.OnCheBienChanging(value);
					this.SendPropertyChanging();
					this._CheBien = value;
					this.SendPropertyChanged("CheBien");
					this.OnCheBienChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MON_MON_NVL", Storage="_MON", ThisKey="ID_Mon", OtherKey="ID_Mon", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public MON MON
		{
			get
			{
				return this._MON.Entity;
			}
			set
			{
				MON previousValue = this._MON.Entity;
				if (((previousValue != value) 
							|| (this._MON.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MON.Entity = null;
						previousValue.MON_NVLs.Remove(this);
					}
					this._MON.Entity = value;
					if ((value != null))
					{
						value.MON_NVLs.Add(this);
						this._ID_Mon = value.ID_Mon;
					}
					else
					{
						this._ID_Mon = default(string);
					}
					this.SendPropertyChanged("MON");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NGUYENVATLIEU_MON_NVL", Storage="_NGUYENVATLIEU", ThisKey="ID_NVL", OtherKey="ID_NVL", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public NGUYENVATLIEU NGUYENVATLIEU
		{
			get
			{
				return this._NGUYENVATLIEU.Entity;
			}
			set
			{
				NGUYENVATLIEU previousValue = this._NGUYENVATLIEU.Entity;
				if (((previousValue != value) 
							|| (this._NGUYENVATLIEU.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NGUYENVATLIEU.Entity = null;
						previousValue.MON_NVLs.Remove(this);
					}
					this._NGUYENVATLIEU.Entity = value;
					if ((value != null))
					{
						value.MON_NVLs.Add(this);
						this._ID_NVL = value.ID_NVL;
					}
					else
					{
						this._ID_NVL = default(string);
					}
					this.SendPropertyChanged("NGUYENVATLIEU");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MON_ORDERS")]
	public partial class MON_ORDER : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID_Orders;
		
		private string _ID_Mon;
		
		private int _SoLuong;
		
		private int _DonGia;
		
		private EntityRef<MON> _MON;
		
		private EntityRef<ORDER> _ORDER;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnID_OrdersChanging(int value);
    partial void OnID_OrdersChanged();
    partial void OnID_MonChanging(string value);
    partial void OnID_MonChanged();
    partial void OnSoLuongChanging(int value);
    partial void OnSoLuongChanged();
    partial void OnDonGiaChanging(int value);
    partial void OnDonGiaChanged();
    #endregion
		
		public MON_ORDER()
		{
			this._MON = default(EntityRef<MON>);
			this._ORDER = default(EntityRef<ORDER>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_Orders", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ID_Orders
		{
			get
			{
				return this._ID_Orders;
			}
			set
			{
				if ((this._ID_Orders != value))
				{
					if (this._ORDER.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_OrdersChanging(value);
					this.SendPropertyChanging();
					this._ID_Orders = value;
					this.SendPropertyChanged("ID_Orders");
					this.OnID_OrdersChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_Mon", DbType="NVarChar(8) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID_Mon
		{
			get
			{
				return this._ID_Mon;
			}
			set
			{
				if ((this._ID_Mon != value))
				{
					if (this._MON.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_MonChanging(value);
					this.SendPropertyChanging();
					this._ID_Mon = value;
					this.SendPropertyChanged("ID_Mon");
					this.OnID_MonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SoLuong", DbType="Int NOT NULL")]
		public int SoLuong
		{
			get
			{
				return this._SoLuong;
			}
			set
			{
				if ((this._SoLuong != value))
				{
					this.OnSoLuongChanging(value);
					this.SendPropertyChanging();
					this._SoLuong = value;
					this.SendPropertyChanged("SoLuong");
					this.OnSoLuongChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DonGia", DbType="Int NOT NULL")]
		public int DonGia
		{
			get
			{
				return this._DonGia;
			}
			set
			{
				if ((this._DonGia != value))
				{
					this.OnDonGiaChanging(value);
					this.SendPropertyChanging();
					this._DonGia = value;
					this.SendPropertyChanged("DonGia");
					this.OnDonGiaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MON_MON_ORDER", Storage="_MON", ThisKey="ID_Mon", OtherKey="ID_Mon", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public MON MON
		{
			get
			{
				return this._MON.Entity;
			}
			set
			{
				MON previousValue = this._MON.Entity;
				if (((previousValue != value) 
							|| (this._MON.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MON.Entity = null;
						previousValue.MON_ORDERs.Remove(this);
					}
					this._MON.Entity = value;
					if ((value != null))
					{
						value.MON_ORDERs.Add(this);
						this._ID_Mon = value.ID_Mon;
					}
					else
					{
						this._ID_Mon = default(string);
					}
					this.SendPropertyChanged("MON");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ORDER_MON_ORDER", Storage="_ORDER", ThisKey="ID_Orders", OtherKey="ID_Orders", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public ORDER ORDER
		{
			get
			{
				return this._ORDER.Entity;
			}
			set
			{
				ORDER previousValue = this._ORDER.Entity;
				if (((previousValue != value) 
							|| (this._ORDER.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ORDER.Entity = null;
						previousValue.MON_ORDERs.Remove(this);
					}
					this._ORDER.Entity = value;
					if ((value != null))
					{
						value.MON_ORDERs.Add(this);
						this._ID_Orders = value.ID_Orders;
					}
					else
					{
						this._ID_Orders = default(int);
					}
					this.SendPropertyChanged("ORDER");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.NGUYENVATLIEU")]
	public partial class NGUYENVATLIEU : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ID_NVL;
		
		private string _Ten_NVL;
		
		private string _ID_LoaiNVL;
		
		private string _QuyCach;
		
		private string _DonViTinh;
		
		private System.Nullable<double> _SoLuongCon;
		
		private System.Nullable<double> _ToiThieuDatLai;
		
		private EntitySet<CUNGCAP> _CUNGCAPs;
		
		private EntitySet<MON_NVL> _MON_NVLs;
		
		private EntityRef<LOAI_NVL> _LOAI_NVL;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnID_NVLChanging(string value);
    partial void OnID_NVLChanged();
    partial void OnTen_NVLChanging(string value);
    partial void OnTen_NVLChanged();
    partial void OnID_LoaiNVLChanging(string value);
    partial void OnID_LoaiNVLChanged();
    partial void OnQuyCachChanging(string value);
    partial void OnQuyCachChanged();
    partial void OnDonViTinhChanging(string value);
    partial void OnDonViTinhChanged();
    partial void OnSoLuongConChanging(System.Nullable<double> value);
    partial void OnSoLuongConChanged();
    partial void OnToiThieuDatLaiChanging(System.Nullable<double> value);
    partial void OnToiThieuDatLaiChanged();
    #endregion
		
		public NGUYENVATLIEU()
		{
			this._CUNGCAPs = new EntitySet<CUNGCAP>(new Action<CUNGCAP>(this.attach_CUNGCAPs), new Action<CUNGCAP>(this.detach_CUNGCAPs));
			this._MON_NVLs = new EntitySet<MON_NVL>(new Action<MON_NVL>(this.attach_MON_NVLs), new Action<MON_NVL>(this.detach_MON_NVLs));
			this._LOAI_NVL = default(EntityRef<LOAI_NVL>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_NVL", DbType="NVarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID_NVL
		{
			get
			{
				return this._ID_NVL;
			}
			set
			{
				if ((this._ID_NVL != value))
				{
					this.OnID_NVLChanging(value);
					this.SendPropertyChanging();
					this._ID_NVL = value;
					this.SendPropertyChanged("ID_NVL");
					this.OnID_NVLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ten_NVL", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Ten_NVL
		{
			get
			{
				return this._Ten_NVL;
			}
			set
			{
				if ((this._Ten_NVL != value))
				{
					this.OnTen_NVLChanging(value);
					this.SendPropertyChanging();
					this._Ten_NVL = value;
					this.SendPropertyChanged("Ten_NVL");
					this.OnTen_NVLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_LoaiNVL", DbType="NVarChar(5) NOT NULL", CanBeNull=false)]
		public string ID_LoaiNVL
		{
			get
			{
				return this._ID_LoaiNVL;
			}
			set
			{
				if ((this._ID_LoaiNVL != value))
				{
					if (this._LOAI_NVL.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_LoaiNVLChanging(value);
					this.SendPropertyChanging();
					this._ID_LoaiNVL = value;
					this.SendPropertyChanged("ID_LoaiNVL");
					this.OnID_LoaiNVLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QuyCach", DbType="NVarChar(50)")]
		public string QuyCach
		{
			get
			{
				return this._QuyCach;
			}
			set
			{
				if ((this._QuyCach != value))
				{
					this.OnQuyCachChanging(value);
					this.SendPropertyChanging();
					this._QuyCach = value;
					this.SendPropertyChanged("QuyCach");
					this.OnQuyCachChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DonViTinh", DbType="NVarChar(15)")]
		public string DonViTinh
		{
			get
			{
				return this._DonViTinh;
			}
			set
			{
				if ((this._DonViTinh != value))
				{
					this.OnDonViTinhChanging(value);
					this.SendPropertyChanging();
					this._DonViTinh = value;
					this.SendPropertyChanged("DonViTinh");
					this.OnDonViTinhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SoLuongCon", DbType="Float")]
		public System.Nullable<double> SoLuongCon
		{
			get
			{
				return this._SoLuongCon;
			}
			set
			{
				if ((this._SoLuongCon != value))
				{
					this.OnSoLuongConChanging(value);
					this.SendPropertyChanging();
					this._SoLuongCon = value;
					this.SendPropertyChanged("SoLuongCon");
					this.OnSoLuongConChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ToiThieuDatLai", DbType="Float")]
		public System.Nullable<double> ToiThieuDatLai
		{
			get
			{
				return this._ToiThieuDatLai;
			}
			set
			{
				if ((this._ToiThieuDatLai != value))
				{
					this.OnToiThieuDatLaiChanging(value);
					this.SendPropertyChanging();
					this._ToiThieuDatLai = value;
					this.SendPropertyChanged("ToiThieuDatLai");
					this.OnToiThieuDatLaiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NGUYENVATLIEU_CUNGCAP", Storage="_CUNGCAPs", ThisKey="ID_NVL", OtherKey="ID_NVL")]
		public EntitySet<CUNGCAP> CUNGCAPs
		{
			get
			{
				return this._CUNGCAPs;
			}
			set
			{
				this._CUNGCAPs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NGUYENVATLIEU_MON_NVL", Storage="_MON_NVLs", ThisKey="ID_NVL", OtherKey="ID_NVL")]
		public EntitySet<MON_NVL> MON_NVLs
		{
			get
			{
				return this._MON_NVLs;
			}
			set
			{
				this._MON_NVLs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LOAI_NVL_NGUYENVATLIEU", Storage="_LOAI_NVL", ThisKey="ID_LoaiNVL", OtherKey="ID_LoaiNVL", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public LOAI_NVL LOAI_NVL
		{
			get
			{
				return this._LOAI_NVL.Entity;
			}
			set
			{
				LOAI_NVL previousValue = this._LOAI_NVL.Entity;
				if (((previousValue != value) 
							|| (this._LOAI_NVL.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._LOAI_NVL.Entity = null;
						previousValue.NGUYENVATLIEUs.Remove(this);
					}
					this._LOAI_NVL.Entity = value;
					if ((value != null))
					{
						value.NGUYENVATLIEUs.Add(this);
						this._ID_LoaiNVL = value.ID_LoaiNVL;
					}
					else
					{
						this._ID_LoaiNVL = default(string);
					}
					this.SendPropertyChanged("LOAI_NVL");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CUNGCAPs(CUNGCAP entity)
		{
			this.SendPropertyChanging();
			entity.NGUYENVATLIEU = this;
		}
		
		private void detach_CUNGCAPs(CUNGCAP entity)
		{
			this.SendPropertyChanging();
			entity.NGUYENVATLIEU = null;
		}
		
		private void attach_MON_NVLs(MON_NVL entity)
		{
			this.SendPropertyChanging();
			entity.NGUYENVATLIEU = this;
		}
		
		private void detach_MON_NVLs(MON_NVL entity)
		{
			this.SendPropertyChanging();
			entity.NGUYENVATLIEU = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.NHACUNGCAP")]
	public partial class NHACUNGCAP : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ID_NCC;
		
		private string _Ten_NCC;
		
		private string _DiaChi;
		
		private string _SDT;
		
		private EntitySet<CUNGCAP> _CUNGCAPs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnID_NCCChanging(string value);
    partial void OnID_NCCChanged();
    partial void OnTen_NCCChanging(string value);
    partial void OnTen_NCCChanged();
    partial void OnDiaChiChanging(string value);
    partial void OnDiaChiChanged();
    partial void OnSDTChanging(string value);
    partial void OnSDTChanged();
    #endregion
		
		public NHACUNGCAP()
		{
			this._CUNGCAPs = new EntitySet<CUNGCAP>(new Action<CUNGCAP>(this.attach_CUNGCAPs), new Action<CUNGCAP>(this.detach_CUNGCAPs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_NCC", DbType="NVarChar(5) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID_NCC
		{
			get
			{
				return this._ID_NCC;
			}
			set
			{
				if ((this._ID_NCC != value))
				{
					this.OnID_NCCChanging(value);
					this.SendPropertyChanging();
					this._ID_NCC = value;
					this.SendPropertyChanged("ID_NCC");
					this.OnID_NCCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ten_NCC", DbType="NVarChar(50)")]
		public string Ten_NCC
		{
			get
			{
				return this._Ten_NCC;
			}
			set
			{
				if ((this._Ten_NCC != value))
				{
					this.OnTen_NCCChanging(value);
					this.SendPropertyChanging();
					this._Ten_NCC = value;
					this.SendPropertyChanged("Ten_NCC");
					this.OnTen_NCCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DiaChi", DbType="NVarChar(100)")]
		public string DiaChi
		{
			get
			{
				return this._DiaChi;
			}
			set
			{
				if ((this._DiaChi != value))
				{
					this.OnDiaChiChanging(value);
					this.SendPropertyChanging();
					this._DiaChi = value;
					this.SendPropertyChanged("DiaChi");
					this.OnDiaChiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SDT", DbType="NVarChar(15)")]
		public string SDT
		{
			get
			{
				return this._SDT;
			}
			set
			{
				if ((this._SDT != value))
				{
					this.OnSDTChanging(value);
					this.SendPropertyChanging();
					this._SDT = value;
					this.SendPropertyChanged("SDT");
					this.OnSDTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NHACUNGCAP_CUNGCAP", Storage="_CUNGCAPs", ThisKey="ID_NCC", OtherKey="ID_NCC")]
		public EntitySet<CUNGCAP> CUNGCAPs
		{
			get
			{
				return this._CUNGCAPs;
			}
			set
			{
				this._CUNGCAPs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CUNGCAPs(CUNGCAP entity)
		{
			this.SendPropertyChanging();
			entity.NHACUNGCAP = this;
		}
		
		private void detach_CUNGCAPs(CUNGCAP entity)
		{
			this.SendPropertyChanging();
			entity.NHACUNGCAP = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.NHANVIEN")]
	public partial class NHANVIEN : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID_NV;
		
		private string _Ho_NV;
		
		private string _Ten_NV;
		
		private string _ID_ChucVu;
		
		private System.Nullable<bool> _GioiTinh_NV;
		
		private System.Nullable<System.DateTime> _NgayBatDauLam;
		
		private System.Nullable<int> _SoCaLam;
		
		private string _DiaChi_NV;
		
		private string _SDT_NV;
		
		private EntitySet<ORDER> _ORDERs;
		
		private EntityRef<CHUCVU> _CHUCVU;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnID_NVChanging(int value);
    partial void OnID_NVChanged();
    partial void OnHo_NVChanging(string value);
    partial void OnHo_NVChanged();
    partial void OnTen_NVChanging(string value);
    partial void OnTen_NVChanged();
    partial void OnID_ChucVuChanging(string value);
    partial void OnID_ChucVuChanged();
    partial void OnGioiTinh_NVChanging(System.Nullable<bool> value);
    partial void OnGioiTinh_NVChanged();
    partial void OnNgayBatDauLamChanging(System.Nullable<System.DateTime> value);
    partial void OnNgayBatDauLamChanged();
    partial void OnSoCaLamChanging(System.Nullable<int> value);
    partial void OnSoCaLamChanged();
    partial void OnDiaChi_NVChanging(string value);
    partial void OnDiaChi_NVChanged();
    partial void OnSDT_NVChanging(string value);
    partial void OnSDT_NVChanged();
    #endregion
		
		public NHANVIEN()
		{
			this._ORDERs = new EntitySet<ORDER>(new Action<ORDER>(this.attach_ORDERs), new Action<ORDER>(this.detach_ORDERs));
			this._CHUCVU = default(EntityRef<CHUCVU>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_NV", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID_NV
		{
			get
			{
				return this._ID_NV;
			}
			set
			{
				if ((this._ID_NV != value))
				{
					this.OnID_NVChanging(value);
					this.SendPropertyChanging();
					this._ID_NV = value;
					this.SendPropertyChanged("ID_NV");
					this.OnID_NVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ho_NV", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Ho_NV
		{
			get
			{
				return this._Ho_NV;
			}
			set
			{
				if ((this._Ho_NV != value))
				{
					this.OnHo_NVChanging(value);
					this.SendPropertyChanging();
					this._Ho_NV = value;
					this.SendPropertyChanged("Ho_NV");
					this.OnHo_NVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ten_NV", DbType="NVarChar(25) NOT NULL", CanBeNull=false)]
		public string Ten_NV
		{
			get
			{
				return this._Ten_NV;
			}
			set
			{
				if ((this._Ten_NV != value))
				{
					this.OnTen_NVChanging(value);
					this.SendPropertyChanging();
					this._Ten_NV = value;
					this.SendPropertyChanged("Ten_NV");
					this.OnTen_NVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_ChucVu", DbType="NVarChar(5)")]
		public string ID_ChucVu
		{
			get
			{
				return this._ID_ChucVu;
			}
			set
			{
				if ((this._ID_ChucVu != value))
				{
					if (this._CHUCVU.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_ChucVuChanging(value);
					this.SendPropertyChanging();
					this._ID_ChucVu = value;
					this.SendPropertyChanged("ID_ChucVu");
					this.OnID_ChucVuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GioiTinh_NV", DbType="Bit")]
		public System.Nullable<bool> GioiTinh_NV
		{
			get
			{
				return this._GioiTinh_NV;
			}
			set
			{
				if ((this._GioiTinh_NV != value))
				{
					this.OnGioiTinh_NVChanging(value);
					this.SendPropertyChanging();
					this._GioiTinh_NV = value;
					this.SendPropertyChanged("GioiTinh_NV");
					this.OnGioiTinh_NVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgayBatDauLam", DbType="Date")]
		public System.Nullable<System.DateTime> NgayBatDauLam
		{
			get
			{
				return this._NgayBatDauLam;
			}
			set
			{
				if ((this._NgayBatDauLam != value))
				{
					this.OnNgayBatDauLamChanging(value);
					this.SendPropertyChanging();
					this._NgayBatDauLam = value;
					this.SendPropertyChanged("NgayBatDauLam");
					this.OnNgayBatDauLamChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SoCaLam", DbType="Int")]
		public System.Nullable<int> SoCaLam
		{
			get
			{
				return this._SoCaLam;
			}
			set
			{
				if ((this._SoCaLam != value))
				{
					this.OnSoCaLamChanging(value);
					this.SendPropertyChanging();
					this._SoCaLam = value;
					this.SendPropertyChanged("SoCaLam");
					this.OnSoCaLamChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DiaChi_NV", DbType="NVarChar(100)")]
		public string DiaChi_NV
		{
			get
			{
				return this._DiaChi_NV;
			}
			set
			{
				if ((this._DiaChi_NV != value))
				{
					this.OnDiaChi_NVChanging(value);
					this.SendPropertyChanging();
					this._DiaChi_NV = value;
					this.SendPropertyChanged("DiaChi_NV");
					this.OnDiaChi_NVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SDT_NV", DbType="NVarChar(15)")]
		public string SDT_NV
		{
			get
			{
				return this._SDT_NV;
			}
			set
			{
				if ((this._SDT_NV != value))
				{
					this.OnSDT_NVChanging(value);
					this.SendPropertyChanging();
					this._SDT_NV = value;
					this.SendPropertyChanged("SDT_NV");
					this.OnSDT_NVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NHANVIEN_ORDER", Storage="_ORDERs", ThisKey="ID_NV", OtherKey="ID_NV")]
		public EntitySet<ORDER> ORDERs
		{
			get
			{
				return this._ORDERs;
			}
			set
			{
				this._ORDERs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CHUCVU_NHANVIEN", Storage="_CHUCVU", ThisKey="ID_ChucVu", OtherKey="ID_ChucVu", IsForeignKey=true, DeleteRule="CASCADE")]
		public CHUCVU CHUCVU
		{
			get
			{
				return this._CHUCVU.Entity;
			}
			set
			{
				CHUCVU previousValue = this._CHUCVU.Entity;
				if (((previousValue != value) 
							|| (this._CHUCVU.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CHUCVU.Entity = null;
						previousValue.NHANVIENs.Remove(this);
					}
					this._CHUCVU.Entity = value;
					if ((value != null))
					{
						value.NHANVIENs.Add(this);
						this._ID_ChucVu = value.ID_ChucVu;
					}
					else
					{
						this._ID_ChucVu = default(string);
					}
					this.SendPropertyChanged("CHUCVU");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ORDERs(ORDER entity)
		{
			this.SendPropertyChanging();
			entity.NHANVIEN = this;
		}
		
		private void detach_ORDERs(ORDER entity)
		{
			this.SendPropertyChanging();
			entity.NHANVIEN = null;
		}
	}
}
#pragma warning restore 1591
